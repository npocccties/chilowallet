geo $white_ip {
    default 1;
    172.18.0.254 0;
}

map $white_ip $limit_object {
    0   "";
    1   $binary_remote_addr;
}

limit_req_zone $limit_object zone=lrz:10m rate=30r/s;

upstream front {
  server chilowallet:3000;
}
upstream front2 {
  server app2:3000;
}
upstream sp {
  server 172.18.0.1;
}

server {
    server_name dev-wallet.oku.cccties.org;# 本番用に差し替えること
    listen 80;
    listen 443 ssl;
    ssl_certificate /etc/nginx/conf.d/signed.crt;
    ssl_certificate_key /etc/nginx/conf.d/domain.key;
    # location / {
    #     limit_req zone=lrz burst=30 nodelay;
    #     proxy_pass http://front;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host $host;
    #     proxy_redirect off;
    # }
    location /static/ {
        alias /workspace/static/;
    }
    error_page  503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
    #FastCGI authorizer for Auth Request module
    location = /shibauthorizer {
        internal;
        include fastcgi_params;
        fastcgi_pass http://sp/shibauthorizer;
    }

    #FastCGI responder
    location /Shibboleth.sso {
        include fastcgi_params;
        fastcgi_pass http://sp/Shibboleth.sso;
    }

    #Resources for the Shibboleth error pages. This can be customised.
    location /shibboleth-sp {
        alias /usr/share/shibboleth/;
    }

    #A secured location.  Here all incoming requests query the
    #FastCGI authorizer.  Watch out for performance issues and spoofing.
    location / {
        #include shib_clear_headers;
        #Add your attributes here. They get introduced as headers
        #by the FastCGI authorizer so we must prevent spoofing.
        shib_request /shibauthorizer;
        shib_request_use_headers on;
        proxy_pass http://sp/secure/index.php;
    }
}
server {
    server_name dev-portfolio.oku.cccties.org;# 本番用に差し替えること
    listen 80;
    listen 443 ssl;
    ssl_certificate /etc/nginx/conf.d/signed_ep.crt;
    ssl_certificate_key /etc/nginx/conf.d/domain_ep.key;
    location / {
        limit_req zone=lrz burst=30 nodelay;
        proxy_pass http://front2;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }
    location /static/ {
        alias /workspace/static/;
    }
    error_page  503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
