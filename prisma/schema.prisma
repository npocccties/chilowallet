generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BadgeVc {
  badgeVcId       Int       @id @default(autoincrement()) @map("badge_vc_id")
  mywalletId      Int       @map("mywallet_id")
  moodleName      String?   @map("moodle_name") @db.VarChar(256)
  badgeCategory   String?   @map("badge_category") @db.VarChar(256)
  badgeName       String?   @map("badge_name") @db.VarChar(256)
  badgeEmail      String    @map("badge_email")
  badgeClassId    String    @map("badge_class_id")
  badgeIssuerName String    @map("badge_issuer_name") @db.VarChar(256)
  badgeIssuedon   DateTime  @map("badge_issuedon") @db.Timestamp(6)
  vcDataHeader    String    @map("vc_data_header")
  vcDataPayload   String    @map("vc_data_payload")
  vcDataSignature String    @map("vc_data_signature")
  createTime      DateTime  @map("create_time") @db.Timestamp(6)
  myWallets       MyWallets @relation(fields: [mywalletId], references: [mywalletId], onDelete: NoAction, onUpdate: NoAction)

  @@map("badge_vcs")
}

model MyWallets {
  mywalletId  Int           @id @default(autoincrement()) @map("mywallet_id")
  orthrosId   String        @unique @map("orthros_id")
  createTime  DateTime      @map("create_time") @db.Timestamp(6)
  badgeVcs    BadgeVc[]
  submissions Submissions[]

  @@map("mywallets")
}

model Submissions {
  badgeVcId       Int       @map("badge_vc_id")
  mywalletId      Int       @map("mywallet_id")
  submissionTime  DateTime  @map("submission_time") @db.Timestamp(6)
  submissionEmail String    @map("submission_email")
  submissionTo    String    @map("submission_to") @db.VarChar(256)
  myWallets       MyWallets @relation(fields: [badgeVcId], references: [mywalletId], onDelete: NoAction, onUpdate: NoAction)

  @@id([badgeVcId, submissionTime])
  @@map("submissions")
}
